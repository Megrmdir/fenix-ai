import { Network } from "../src/core/Network.js";
import { activations } from "../src/activations/index.js";

console.log("Fenix.AI - –†–µ—à–µ–Ω–∏–µ XOR");

// –°–æ–∑–¥–∞–µ–º —Å–µ—Ç—å
const network = new Network();

// –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: 2 –≤—Ö–æ–¥–∞ -> 4 —Å–∫—Ä—ã—Ç—ã—Ö –Ω–µ–π—Ä–æ–Ω–∞ -> 1 –≤—ã—Ö–æ–¥
network
    .addLayer(2, activations.sin, 2)    // –°–∫—Ä—ã—Ç—ã–π —Å–ª–æ–π: 2 –Ω–µ–π—Ä–æ–Ω–∞
    .addLayer(1, activations.sigmoid);   // –í—ã—Ö–æ–¥–Ω–æ–π —Å–ª–æ–π: 1 –Ω–µ–π—Ä–æ–Ω, Sigmoid

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è
network.setLearningRate(0.07);

// –î–∞–Ω–Ω—ã–µ XOR
const xorData = [
    { input: [0, 0], target: [0] },  // 0 XOR 0 = 0
    { input: [0, 1], target: [1] },  // 0 XOR 1 = 1
    { input: [1, 0], target: [1] },  // 1 XOR 0 = 1
    { input: [1, 1], target: [0] }   // 1 XOR 1 = 0
];

console.log("–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–µ—Ç–∏:", network.getInfo());

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ –æ–±—É—á–µ–Ω–∏—è
console.log("\n—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –î–û –æ–±—É—á–µ–Ω–∏—è:");
xorData.forEach(example => {
    const prediction = network.predict(example.input);
    console.log(`[${example.input}] -> ${prediction[0].toFixed(4)} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${example.target[0]})`);
});

// –û–±—É—á–∞–µ–º —Å–µ—Ç—å
network.train(xorData, 200000);

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è
console.log("\nüéØ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ü–û–°–õ–ï –æ–±—É—á–µ–Ω–∏—è:");
xorData.forEach(example => {
    const prediction = network.predict(example.input);
    const isCorrect = Math.abs(prediction[0] - example.target[0]) < 0.1;
    console.log(`[${example.input}] -> ${prediction[0].toFixed(4)} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${example.target[0]}) ${isCorrect ? '‚úÖ' : '‚ùå'}`);
});

console.log("\nXOR —Ä–µ—à–µ–Ω–∞");
